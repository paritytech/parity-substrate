name: subkey
author: "Parity Team <admin@parity.io>"
about: Utility for generating and restoring with Substrate keys
args:
  - ed25519:
      short: e
      long: ed25519
      help: Use Ed25519/BIP39 cryptography
      takes_value: false
  - sr25519:
      short: s
      long: sr25519
      help: Use Schnorr/Ristretto x25519/BIP39 cryptography
      takes_value: false
  - password:
      short: p
      long: password
      takes_value: true
      required: false
      help: The password for the key
  - network:
      short: n
      long: network
      takes_value: true
      required: false
      help: Specify a network. One of substrate (default), polkadot, kusama, or dothereum.
  - wookong:
      long: wookong
      takes_value: false
      required: false
      help: Use the Wookong hardware wallet
  - kill-wallet:
      long: kill-wallet
      takes_value: false
      required: false
      help: Must be used to confirm the replacement or removal of a key in the hardware wallet
subcommands:
  - generate:
      about: Generate a random account. If a hardware wallet is configured and if --kill-wallet given, then it will replace its key.
      args:
        - words:
            short: w
            long: words
            help: The number of words in the phrase to generate. One of 12 (default), 15, 18, 21 and 24.
            takes_value: true
  - inspect:
      about: Gets a public key and a SS58 address from the provided Secret URI.
      args:
        - uri:
            index: 1
            required: false
            help: A Key URI to be inspected. May be a secret seed, secret URI (with derivation paths and password), SS58 or public URI.
  - sign:
      about: Sign a message, provided on STDIN, with a given (secret) key
      args:
        - suri:
            index: 1
            required: false
            help: The secret key URI.
        - hex:
            short: h
            long: hex
            help: The message on STDIN is hex-encoded data
            takes_value: false
  - import:
      about: Import a given secret key into the hardware wallet.
      args:
        - suri:
            index: 1
            required: false
            help: The secret key URI. If not given, it will be read from standard input.
  - transfer:
      about: Author and sign a Node balances::Transfer transaction with a given (secret) key
      args:
        - to:
            index: 1
            required: true
            help: The destination account public key URI.
        - amount:
            index: 2
            required: true
            help: The number of units to transfer.
        - signer:
            long: signer
            short: s
            help: The secret key URI of the signer ("from"). If not given it will be read from standard input.
            takes_value: true
            required: false
        - nonce:
            short: n
            long: nonce
            help: The transaction index of the sender account.
            takes_value: true
            required: true
        - genesis:
            short: g
            long: genesis
            help: The genesis hash or a recognised chain identifier (dev, elm, alex).
            takes_value: true
  - verify:
      about: Verify a signature for a message, provided on STDIN, with a given (public or secret) key
      args:
        - sig:
            index: 1
            required: true
            help: Signature, hex-encoded.
        - uri:
            index: 2
            required: false
            help: The public or secret key URI.
        - hex:
            short: h
            long: hex
            help: The message on STDIN is hex-encoded data
            takes_value: false
  - vanity:
      about: Generate a seed that provides a vanity address
      args:
        - pattern:
            index: 1
            help: Desired pattern
        - number:
            short: n
            long: number
            help: Number of keys to generate
            takes_value: true
            default_value: "1"
  - sign-transaction:
      about: Sign transaction from encoded Call. Returns a signed and encoded UncheckedMortalCompactExtrinsic as hex.
      args:
        - call:
            index: 1
            help: The call, hex-encoded.
            required: true
        - signer:
            long: signer
            short: s
            help: The secret key URI. Ignored if a hardware wallet is specified.
            takes_value: true
            required: false
        - nonce:
            short: n
            long: nonce
            help: The transaction index of the sender account.
            takes_value: true
            required: true
        - genesis:
            short: g
            long: genesis
            help: The genesis hash or a recognised chain identifier (dev, elm, alex).
            takes_value: true
