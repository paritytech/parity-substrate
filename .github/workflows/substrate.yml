name:                          Substrate

on:                            [push]
jobs:
  cargo-check-benches:
    name:                      Cargo check benches
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      BUILD_DUMMY_WASM_BINARY: 1
      CARGO_INCREMENTAL:       0
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo check benches
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             check
          toolchain:           nightly
          args:                --benches --all
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  cargo-check-subkey:
    name:                      Cargo check subkey
    runs-on:                   [self-hosted, macos-latest, windows-latest]
    container:                 generalbeck/rust-builder:latest
    env:
      BUILD_DUMMY_WASM_BINARY: 1
      CARGO_INCREMENTAL:       0
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo check subkey
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             check
          args:                --manifest-path "bin/utils/subkey/Cargo.toml" --release
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  test-stable:
    name:                      Test linux stable
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      BUILD_DUMMY_WASM_BINARY: 1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[linux-test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test linux stable
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             test
          args:                --all --release --verbose --locked
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  test-frame-staking:
    name:                      Test frame staking
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test frame staking
        continue-on-error:     true
        uses:                  actions-rs/cargo@v1
        with:
          command:             test
          args:                --manifest-path "./frame/staking/Cargo.toml" --release --verbose --no-default-features --features std
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  test-wasmtime:
    name:                      Test wasmtime
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test wasmtime
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             test
          args:                --manifest-path "./client/executor/Cargo.toml" --release --verbose --features wasmtime
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  test-stable-int:
    name:                      Test linux stable int
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      BUILD_DUMMY_WASM_BINARY: 1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test linux stable int
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             test
          args:                -p node-cli --release --verbose --locked -- --ignored
        env:
          RUST_LOG:            "sync=trace,consensus=trace,client=trace,state-db=trace,db=trace,forks=trace,state_db=trace,storage_cache=trace"
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  test-full-crypto-feature:
    name:                      Test full crypto feature
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo build crypto core
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             build
          toolchain:           nightly
          args:                --manifest-path "./primitives/core/Cargo.toml" --verbose --no-default-features --features full_crypto
      - name:                  Run cargo build crypto apps
        uses:                  actions-rs/cargo@v1
        continue-on-error:     true
        with:
          command:             build
          toolchain:           nightly
          args:                --manifest-path "./primitives/application-crypto/Cargo.toml"--verbose --no-default-features --features full_crypto
      - name:                  Stop sccache
        if:                    always()
        run:                   sccache --stop-server
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   bash .github/workflows/clean-target.sh

  linux-dependency-rules:
    name:                      Test dependency rules
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Test dependency rules
        shell:                 bash
        run:                   bash .maintain/ensure-deps.sh
#build
  build-substrate:
    name:                      Build linux Substrate
    needs:                     [test-stable]
    runs-on:                   self-hosted
    container:                 generalbeck/rust-builder:latest
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[build-substrate]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[build-substrate]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[build-substrate]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo build Substrate
        uses:                  actions-rs/cargo@v1
        with:
          command:             build
          args:                --release --verbose
      - name:                  Upload artifact
        uses:                  actions/upload-artifact@v1
        continue-on-error:     true
        with:
          name:                substrate
          path:                target/release

  build-subkey:
    name:                      Build linux Subkey
    needs:                     [test-stable]
    runs-on:                   [self-hosted, macos-latest, windows-latest]
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[build-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[build-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[build-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo build Subkey
        uses:                  actions-rs/cargo@v1
        with:
          command:             build
          args:                --release --verbose
      - name:                  Upload artifact
        uses:                  actions/upload-artifact@v1
        continue-on-error:     true
        with:
          name:                subkey
          path:                target/release

  build-rust-doc-release:
    name:                      Build Rust doc release
    needs:                     [test-stable]
    runs-on:                   self-hosted
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@v2
        with:
          fetch-depth:         100
      - name:                  Checkout submodules
        shell:                 bash
        run:                   git submodule update --init --recursive
      - name:                  Restore $CARGO_HOME/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[build-rust-doc-release]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore $CARGO_HOME/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                $CARGO_HOME/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[build-rust-doc-release]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[build-rust-doc-release]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Sccache statistics
        run:                   sccache --show-stats
      - name:                  Run cargo doc release
        uses:                  actions-rs/cargo@v1
        with:
          command:             doc
          toolchain:           nightly
          args:                --release --all --verbose
