name: Substrate

on: [push]
jobs:
  check:
    name: Test
    runs-on: self-hosted
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Checkout submodules
        shell: bash
        run: git submodule update --init --recursive
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal
          override: true
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown
          profile: minimal
          override: true
      - name: Install cargo-audit, cargo-web, wasm-pack
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-audit cargo-web wasm-pack
      - name: Install wam-gc
        uses: actions-rs/cargo@v1
        with:
          command: install
          toolchain: nightly
          args: --git https://github.com/alexcrichton/wasm-gc
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Check runtime
        run: ./.maintain/gitlab/check_runtime.sh
      - name: Check line width
        run: ./.maintain/gitlab/check_line_width.sh
      - name: Cargo audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
      - name: Cargo check benches
        uses: actions-rs/cargo@v1
        with:
          command: check
          toolchain: nightly
          args: --benches --all
        env: 
          BUILD_DUMMY_WASM_BINARY: 1
      - name: Cargo check subkey
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path "bin/utils/subkey/Cargo.toml" --benches --all
        env: 
          BUILD_DUMMY_WASM_BINARY: 1
      - name: Test linux stable
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --release --verbose --locked
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Test dependency rules
        run: .maintain/ensure-deps.sh
      - name: Test frame staking
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path "frame/staking/Cargo.toml" --release --verbose --no-default-features --features std
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Test wasmtime
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path "client/executor/Cargo.toml" --release --verbose --features wasmtime
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Prepare build directory for cache
        run: |
          find ./target/debug -maxdepth 1 -type f -delete \
          && rm -fr ./target/debug/{deps,.fingerprint}/*{substrate}* \
          && rm -f  ./target/.rustc_info.json
        
