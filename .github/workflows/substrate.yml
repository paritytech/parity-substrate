name:                          Substrate

on:                            [push]
#  push:
#    branches:
#      - master
jobs:
  cargo-check-benches:
    name:                      Cargo check benches
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      BUILD_DUMMY_WASM_BINARY: 1
      CARGO_INCREMENTAL:       0
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[cargo-check-benches]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo check benches
        shell:                 bash
        continue-on-error:     true
        run:                   time cargo +nightly check --benches --all
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/debug -maxdepth 1 -type f -delete;
          rm -fr ./target/debug/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;

  cargo-check-subkey:
    name:                      Cargo check subkey
    runs-on:                   [self-hosted]
    container:                 parity/rust-builder:latest
    env:
      BUILD_DUMMY_WASM_BINARY: 1
      CARGO_INCREMENTAL:       0
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[cargo-check-subkey]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo check subkey
        shell:                 bash
        continue-on-error:     true
        run:                   time cargo check --release --manifest-path "bin/utils/subkey/Cargo.toml"
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -fr ./target/release/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;


  test-stable:
    name:                      Test linux stable
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      BUILD_DUMMY_WASM_BINARY: 1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[linux-test-stable]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test linux stable
        shell:                 bash
        continue-on-error:     true
        run:                   cargo test --all --release --verbose --locked
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -fr ./target/release/{deps,.fingerprint}/*{substrate}*;
          rm -f  ./target/.rustc_info.json;


  test-frame-staking:
    name:                      Test frame staking
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-frame-staking]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test frame staking
        shell:                 bash
        continue-on-error:     true
        run:                   cargo test --manifest-path "./frame/staking/Cargo.toml" --release --verbose --no-default-features --features std
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -fr ./target/release/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;

  test-wasmtime:
    name:                      Test wasmtime
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-wasmtime]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test wasmtime
        shell:                 bash
        continue-on-error:     true
        run:                   cargo test --manifest-path "./client/executor/Cargo.toml" --release --verbose --features wasmtime
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -fr ./target/release/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;

  test-stable-int:
    name:                      Test linux stable int
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      BUILD_DUMMY_WASM_BINARY: 1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-stable-int]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo Test linux stable int
        shell:                 bash
        continue-on-error:     true
        run:                   cargo test -p node-cli --release --verbose --locked -- --ignored
        env:
          RUST_LOG:            "sync=trace,consensus=trace,client=trace,state-db=trace,db=trace,forks=trace,state_db=trace,storage_cache=trace"
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/release -maxdepth 1 -type f -delete;
          rm -fr ./target/release/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;

  test-full-crypto-feature:
    name:                      Test full crypto feature
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    env:
      RUSTFLAGS:               "-Cdebug-assertions=y"
      CARGO_INCREMENTAL:       0
      RUST_BACKTRACE:          1
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Restore ${CARGO_HOME}.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ${CARGO_HOME}.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                ${CARGO_HOME}.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[test-full-crypto-feature]-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Run cargo build crypto core
        shell:                 bash
        continue-on-error:     true
        run:                   cargo +nightly build --manifest-path "./primitives/core/Cargo.toml" --verbose --no-default-features --features full_crypto
      - name:                  Run cargo build crypto apps
        shell:                 bash
        continue-on-error:     true
        run:                   cargo +nightly build --manifest-path "./primitives/application-crypto/Cargo.toml" --verbose --no-default-features --features full_crypto
      - name:                  Prepare build directory for cache
        shell:                 bash
        run:                   |
          echo "Prepare build directory for cache"
          find ./target/debug -maxdepth 1 -type f -delete;
          rm -fr ./target/debug/{deps,.fingerprint}/*;
          rm -f  ./target/.rustc_info.json;

  linux-dependency-rules:
    name:                      Test dependency rules
    runs-on:                   self-hosted
    container:                 parity/rust-builder:latest
    steps:
      - name:                  Checkout sources
        uses:                  actions/checkout@master
        with:
          submodules:      recursive
      - name:                  Test dependency rules
        shell:                 bash
        run:                   .maintain/ensure-deps.sh
