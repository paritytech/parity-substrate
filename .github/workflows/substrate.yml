name: Substrate

on: [push]
jobs:
  check:
    name: Test
    runs-on: self-hosted
    container: parity/rust-builder:latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Checkout submodules
        shell: bash
        run: git submodule update --init --recursive
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Cargo audit
        uses: actions-rs/cargo@v1
        with:
          command: audit
      - name: Cargo check benches
        uses: actions-rs/cargo@v1
        with:
          command: check
          toolchain: nightly
          args: --benches --all
        env: 
          BUILD_DUMMY_WASM_BINARY: 1
      - name: Cargo check subkey
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path "bin/utils/subkey/Cargo.toml" --benches --all
        env: 
          BUILD_DUMMY_WASM_BINARY: 1
      - name: Test linux stable
        continue-on-error: true
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --release --verbose --locked
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Test dependency rules
        run: .maintain/ensure-deps.sh
      - name: Test frame staking
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path "frame/staking/Cargo.toml" --release --verbose --no-default-features --features std
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Test wasmtime
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path "client/executor/Cargo.toml" --release --verbose --features wasmtime
        env: 
          RUSTFLAGS: "-Cdebug-assertions=y"
      - name: Test linux stable int
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: -p node-cli --release --verbose --locked -- --ignored
      - name: Check wasm crates
        run: |
          time cargo build --target=wasm32-unknown-unknown -p sp-io && \
          cargo build --target=wasm32-unknown-unknown -p sp-runtime && \
          cargo build --target=wasm32-unknown-unknown -p sp-std && \
          cargo build --target=wasm32-unknown-unknown -p sc-client && \
          cargo build --target=wasm32-unknown-unknown -p sc-consensus-aura && \
          cargo build --target=wasm32-unknown-unknown -p sc-consensus-babe && \
          cargo build --target=wasm32-unknown-unknown -p sp-consensus && \
          cargo build --target=wasm32-unknown-unknown -p sc-telemetry && \
          cargo build --manifest-path=bin/node/cli/Cargo.toml --no-default-features --features "browser" --target=wasm32-unknown-unknown
      - name: Test full crypto feature core
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: nigthly
          args: --manifest-path "primitives/core/Cargo.toml" --verbose --no-default-features --features full_crypto
      - name: Test full crypto feature app
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: nigthly
          args: --manifest-path "primitives/application-crypto/Cargo.toml" --verbose --no-default-features --features full_crypto
      - name: Prepare build directory for cache
        run: |
          find ./target/debug -maxdepth 1 -type f -delete \
          && rm -fr ./target/debug/{deps,.fingerprint}/*{substrate}* \
          && rm -f  ./target/.rustc_info.json

        
      
