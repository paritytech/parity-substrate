name:                      Check web wasm

on:                        [push]
jobs:
  check-web-wasm:
    name:                  Check web wasm
    runs-on:               self-hosted
    container:             generalbeck/rust-builder:1.41.1
    env:
      CARGO_INCREMENTAL:   0
    steps:
      - name:              Checkout sources
        uses:              actions/checkout@v2
        with:
          fetch-depth:     100
      - name:              Checkout submodules
        shell:             bash
        run:               git submodule update --init --recursive
      - name:              Prepare for cache
        shell:             bash
        run:               rm -rf /usr/local/cargo/.cargo/{git,registry}&&mkdir -p /usr/local/cargo/.cargo/{git,registry}
      - name:                  Restore /usr/local/cargo/.cargo/git
        uses:                  actions/cache@v1.1.2
        with:
          path:                /usr/local/cargo/.cargo/git
          key:                 ${{ runner.OS }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore /usr/local/cargo/.cargo/registry
        uses:                  actions/cache@v1.1.2
        with:
          path:                /usr/local/cargo/.cargo/registry
          key:                 ${{ runner.OS }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name:                  Restore ./target
        uses:                  actions/cache@v1.1.2
        with:
          path:                target
          key:                 ${{ runner.OS }}-cargo-build-[check-web-wasm]-${{ hashFiles('**/Cargo.lock') }}
      - name:              Environment
        run:               printenv
      - name:              Run cargo build wasm
        continue-on-error: true
        run:               |
           rustup show
           cargo --version
           sccache --show-stats
           # WASM support is in progress. As more and more crates support WASM, we
           # should add entries here. See https://github.com/paritytech/substrate/issues/2416
           time cargo build --target=wasm32-unknown-unknown -p sp-io
           time cargo build --target=wasm32-unknown-unknown -p sp-runtime
           time cargo build --target=wasm32-unknown-unknown -p sp-std
           time cargo build --target=wasm32-unknown-unknown -p sc-client
           time cargo build --target=wasm32-unknown-unknown -p sc-consensus-aura
           time cargo build --target=wasm32-unknown-unknown -p sc-consensus-babe
           time cargo build --target=wasm32-unknown-unknown -p sp-consensus
           time cargo build --target=wasm32-unknown-unknown -p sc-telemetry
           # Note:         the command below is a bit weird because several Cargo issues prevent us from compiling the node in a more straight-forward way.
           time cargo build --target=wasm32-unknown-unknown --manifest-path=bin/node/cli/Cargo.toml --no-default-features --features "browser"
           echo "Prepare build directory for cache"
           find ./target/debug -maxdepth 1 -type f -delete;
           find ./target/wasm32-unknown-unknown/debug -maxdepth 1 -type f -delete;
           rm -fr ./target/debug/{deps,.fingerprint}/*;
           rm -fr ./target/wasm32-unknown-unknown/debug/{deps,.fingerprint}/*{node_cli.wasm}*;
           rm -f  ./target/.rustc_info.json;
      - name:              Stop sccache
        if:                always()
        run:               sccache --stop-server
