[package]
name = "substrate"
version = "2.0.0-alpha.1"
authors = ["Parity Technologies <admin@parity.io>"]
description = "All Substrate libraries."
readme = "README.md"
keywords = ["substrate"]
homepage = "https://parity.io/substrate"
repository = "https://github.com/enfipy/substrate"
documentation = "https://substrate.dev"
categories = ["blockchain"]
edition = "2018"

[workspace]
members = [
	"bin/node-template",
	"bin/node-template/runtime",
	"bin/node/cli",
	"bin/node/executor",
	"bin/node/primitives",
	"bin/node/rpc-client",
	"bin/node/rpc",
	"bin/node/runtime",
	"bin/node/testing",
	"bin/subkey",
	"client",
	"client/api",
	"client/authority-discovery",
	"client/basic-authorship",
	"client/block-builder",
	"client/chain-spec",
	"client/chain-spec/derive",
	"client/cli",
	"client/consensus/aura",
	"client/consensus/babe",
	"client/consensus/pow",
	"client/consensus/slots",
	"client/consensus/uncles",
	"client/db",
	"client/executor",
	"client/executor/runtime-test",
	"client/finality-grandpa",
	"client/tracing",
	"client/keystore",
	"client/network",
	"client/offchain",
	"client/peerset",
	"client/rpc-servers",
	"client/rpc",
	"client/rpc/api",
	"client/service",
	"client/service/test",
	"client/state-db",
	"client/telemetry",
	"client/transaction-pool",
	"client/transaction-pool/graph",
	"client/utils/wasm-builder-runner",
	"client/grafana-data-source",
	"client/grafana-data-source/test",
	"frame/assets",
	"frame/aura",
	"frame/authority-discovery",
	"frame/authorship",
	"frame/babe",
	"frame/balances",
	"frame/collective",
	"frame/contracts",
	"frame/contracts/rpc",
	"frame/contracts/rpc/runtime-api",
	"frame/democracy",
	"frame/elections-phragmen",
	"frame/elections",
	"frame/evm",
	"frame/example",
	"frame/executive",
	"frame/finality-tracker",
	"frame/generic-asset",
	"frame/grandpa",
	"frame/im-online",
	"frame/indices",
	"frame/membership",
	"frame/metadata",
	"frame/nicks",
	"frame/offences",
	"frame/randomness-collective-flip",
	"frame/scored-pool",
	"frame/session",
	"frame/staking",
	"frame/staking/reward-curve",
	"frame/sudo",
	"frame/support",
	"frame/support/procedural",
	"frame/support/procedural/tools",
	"frame/support/procedural/tools/derive",
	"frame/support/test",
	"frame/system",
	"frame/system/rpc/runtime-api",
	"frame/timestamp",
	"frame/transaction-payment",
	"frame/transaction-payment/rpc",
	"frame/transaction-payment/rpc/runtime-api",
	"frame/treasury",
	"frame/utility",
	"primitives/application-crypto",
	"primitives/authority-discovery",
	"primitives/authorship",
	"primitives/block-builder/runtime-api",
	"primitives/blockchain",
	"primitives/consensus/aura",
	"primitives/consensus/babe",
	"primitives/consensus/common",
	"primitives/consensus/pow",
	"primitives/core",
	"primitives/core/debug-derive",
	"primitives/core/storage",
	"primitives/externalities",
	"primitives/finality-tracker",
	"primitives/finality-grandpa",
	"primitives/inherents",
	"primitives/keyring",
	"primitives/offchain",
	"primitives/panic-handler",
	"primitives/phragmen",
	"primitives/rpc",
	"primitives/runtime-interface",
	"primitives/runtime-interface/proc-macro",
	"primitives/runtime-interface/test-wasm",
	"primitives/serializer",
	"primitives/session",
	"primitives/sr-api",
	"primitives/sr-api/proc-macro",
	"primitives/sr-api/test",
	"primitives/sr-arithmetic",
	"primitives/sr-io",
	"primitives/sr-primitives",
	"primitives/sr-sandbox",
	"primitives/sr-staking-primitives",
	"primitives/sr-std",
	"primitives/sr-version",
	"primitives/state-machine",
	"primitives/timestamp",
	"primitives/transaction-pool",
	"primitives/transaction-pool/runtime-api",
	"primitives/trie",
	"primitives/wasm-interface",
	"test/utils/chain-spec-builder",
	"test/utils/client",
	"test/utils/primitives",
	"test/utils/runtime",
	"test/utils/runtime/client",
	"test/utils/transaction-factory",
	"utils/build-script-utils",
	"utils/fork-tree",
	"utils/frame/rpc/support",
	"utils/frame/rpc/system",
	"utils/wasm-builder",
]

[dependencies]
client = { optional = true, path = "client" }
client-api = { optional = true, path = "client/api" }
client-authority-discovery = { optional = true, path = "client/authority-discovery" }
client-basic-authorship = { optional = true, path = "client/basic-authorship" }
client-block-builder = { optional = true, path = "client/block-builder" }
client-chain-spec = { optional = true, path = "client/chain-spec" }
client-chain-spec-derive = { optional = true, path = "client/chain-spec/derive" }
client-cli = { optional = true, path = "client/cli" }
client-consensus-aura = { optional = true, path = "client/consensus/aura" }
client-consensus-babe = { optional = true, path = "client/consensus/babe" }
client-consensus-pow = { optional = true, path = "client/consensus/pow" }
client-consensus-slots = { optional = true, path = "client/consensus/slots" }
client-consensus-uncles = { optional = true, path = "client/consensus/uncles" }
client-db = { optional = true, path = "client/db" }
client-executor = { optional = true, path = "client/executor" }
client-executor-runtime-test = { optional = true, path = "client/executor/runtime-test" }
client-finality-grandpa = { optional = true, path = "client/finality-grandpa" }
client-tracing = { optional = true, path = "client/tracing" }
client-keystore = { optional = true, path = "client/keystore" }
client-network = { optional = true, path = "client/network" }
client-offchain = { optional = true, path = "client/offchain" }
client-peerset = { optional = true, path = "client/peerset" }
client-rpc-servers = { optional = true, path = "client/rpc-servers" }
client-rpc = { optional = true, path = "client/rpc" }
client-rpc-api = { optional = true, path = "client/rpc/api" }
client-service = { optional = true, path = "client/service" }
client-service-test = { optional = true, path = "client/service/test" }
client-state-db = { optional = true, path = "client/state-db" }
client-telemetry = { optional = true, path = "client/telemetry" }
client-transaction-pool = { optional = true, path = "client/transaction-pool" }
client-transaction-pool-graph = { optional = true, path = "client/transaction-pool/graph" }
client-utils-wasm-builder-runner = { optional = true, path = "client/utils/wasm-builder-runner" }
client-grafana-data-source = { optional = true, path = "client/grafana-data-source" }
client-grafana-data-source-test = { optional = true, path = "client/grafana-data-source/test" }
frame-assets = { optional = true, path = "frame/assets" }
frame-aura = { optional = true, path = "frame/aura" }
frame-authority-discovery = { optional = true, path = "frame/authority-discovery" }
frame-authorship = { optional = true, path = "frame/authorship" }
frame-babe = { optional = true, path = "frame/babe" }
frame-balances = { optional = true, path = "frame/balances" }
frame-collective = { optional = true, path = "frame/collective" }
frame-contracts = { optional = true, path = "frame/contracts" }
frame-contracts-rpc = { optional = true, path = "frame/contracts/rpc" }
frame-contracts-rpc-runtime-api = { optional = true, path = "frame/contracts/rpc/runtime-api" }
frame-democracy = { optional = true, path = "frame/democracy" }
frame-elections-phragmen = { optional = true, path = "frame/elections-phragmen" }
frame-elections = { optional = true, path = "frame/elections" }
frame-evm = { optional = true, path = "frame/evm" }
frame-example = { optional = true, path = "frame/example" }
frame-executive = { optional = true, path = "frame/executive" }
frame-finality-tracker = { optional = true, path = "frame/finality-tracker" }
frame-generic-asset = { optional = true, path = "frame/generic-asset" }
frame-grandpa = { optional = true, path = "frame/grandpa" }
frame-im-online = { optional = true, path = "frame/im-online" }
frame-indices = { optional = true, path = "frame/indices" }
frame-membership = { optional = true, path = "frame/membership" }
frame-metadata = { optional = true, path = "frame/metadata" }
frame-nicks = { optional = true, path = "frame/nicks" }
frame-offences = { optional = true, path = "frame/offences" }
frame-randomness-collective-flip = { optional = true, path = "frame/randomness-collective-flip" }
frame-scored-pool = { optional = true, path = "frame/scored-pool" }
frame-session = { optional = true, path = "frame/session" }
frame-staking = { optional = true, path = "frame/staking" }
frame-staking-reward-curve = { optional = true, path = "frame/staking/reward-curve" }
frame-sudo = { optional = true, path = "frame/sudo" }
frame-support = { optional = true, path = "frame/support" }
frame-support-procedural = { optional = true, path = "frame/support/procedural" }
frame-support-procedural-tools = { optional = true, path = "frame/support/procedural/tools" }
frame-support-procedural-tools-derive = { optional = true, path = "frame/support/procedural/tools/derive" }
frame-support-test = { optional = true, path = "frame/support/test" }
frame-system = { optional = true, path = "frame/system" }
frame-system-rpc-runtime-api = { optional = true, path = "frame/system/rpc/runtime-api" }
frame-timestamp = { optional = true, path = "frame/timestamp" }
frame-transaction-payment = { optional = true, path = "frame/transaction-payment" }
frame-transaction-payment-rpc = { optional = true, path = "frame/transaction-payment/rpc" }
frame-transaction-payment-rpc-runtime-api = { optional = true, path = "frame/transaction-payment/rpc/runtime-api" }
frame-treasury = { optional = true, path = "frame/treasury" }
frame-utility = { optional = true, path = "frame/utility" }
primitives-application-crypto = { optional = true, path = "primitives/application-crypto" }
primitives-authority-discovery = { optional = true, path = "primitives/authority-discovery" }
primitives-authorship = { optional = true, path = "primitives/authorship" }
primitives-block-builder-runtime-api = { optional = true, path = "primitives/block-builder/runtime-api" }
primitives-blockchain = { optional = true, path = "primitives/blockchain" }
primitives-consensus-aura = { optional = true, path = "primitives/consensus/aura" }
primitives-consensus-babe = { optional = true, path = "primitives/consensus/babe" }
primitives-consensus-common = { optional = true, path = "primitives/consensus/common" }
primitives-consensus-pow = { optional = true, path = "primitives/consensus/pow" }
primitives-core = { optional = true, path = "primitives/core" }
primitives-core-debug-derive = { optional = true, path = "primitives/core/debug-derive" }
primitives-core-storage = { optional = true, path = "primitives/core/storage" }
primitives-externalities = { optional = true, path = "primitives/externalities" }
primitives-finality-tracker = { optional = true, path = "primitives/finality-tracker" }
primitives-finality-grandpa = { optional = true, path = "primitives/finality-grandpa" }
primitives-inherents = { optional = true, path = "primitives/inherents" }
primitives-keyring = { optional = true, path = "primitives/keyring" }
primitives-offchain = { optional = true, path = "primitives/offchain" }
primitives-panic-handler = { optional = true, path = "primitives/panic-handler" }
primitives-phragmen = { optional = true, path = "primitives/phragmen" }
primitives-rpc = { optional = true, path = "primitives/rpc" }
primitives-runtime-interface = { optional = true, path = "primitives/runtime-interface" }
primitives-runtime-interface-proc-macro = { optional = true, path = "primitives/runtime-interface/proc-macro" }
primitives-runtime-interface-test-wasm = { optional = true, path = "primitives/runtime-interface/test-wasm" }
primitives-serializer = { optional = true, path = "primitives/serializer" }
primitives-session = { optional = true, path = "primitives/session" }
primitives-sr-api = { optional = true, path = "primitives/sr-api" }
primitives-sr-api-proc-macro = { optional = true, path = "primitives/sr-api/proc-macro" }
primitives-sr-api-test = { optional = true, path = "primitives/sr-api/test" }
primitives-sr-arithmetic = { optional = true, path = "primitives/sr-arithmetic" }
primitives-sr-io = { optional = true, path = "primitives/sr-io" }
primitives-sr-primitives = { optional = true, path = "primitives/sr-primitives" }
primitives-sr-sandbox = { optional = true, path = "primitives/sr-sandbox" }
primitives-sr-staking-primitives = { optional = true, path = "primitives/sr-staking-primitives" }
primitives-sr-std = { optional = true, path = "primitives/sr-std" }
primitives-sr-version = { optional = true, path = "primitives/sr-version" }
primitives-state-machine = { optional = true, path = "primitives/state-machine" }
primitives-timestamp = { optional = true, path = "primitives/timestamp" }
primitives-transaction-pool = { optional = true, path = "primitives/transaction-pool" }
primitives-transaction-pool-runtime-api = { optional = true, path = "primitives/transaction-pool/runtime-api" }
primitives-trie = { optional = true, path = "primitives/trie" }
primitives-wasm-interface = { optional = true, path = "primitives/wasm-interface" }
test-utils-chain-spec-builder = { optional = true, path = "test/utils/chain-spec-builder" }
test-utils-client = { optional = true, path = "test/utils/client" }
test-utils-primitives = { optional = true, path = "test/utils/primitives" }
test-utils-runtime = { optional = true, path = "test/utils/runtime" }
test-utils-runtime-client = { optional = true, path = "test/utils/runtime/client" }
test-utils-transaction-factory = { optional = true, path = "test/utils/transaction-factory" }
utils-build-script-utils = { optional = true, path = "utils/build-script-utils" }
utils-fork-tree = { optional = true, path = "utils/fork-tree" }
utils-frame-rpc-support = { optional = true, path = "utils/frame/rpc/support" }
utils-frame-rpc-system = { optional = true, path = "utils/frame/rpc/system" }
utils-wasm-builder = { optional = true, path = "utils/wasm-builder" }

[features]
default = ["frame-system"]

use-client = ["client"]
use-client-api = ["client-api"]
use-client-authority-discovery = ["client-authority-discovery"]
use-client-basic-authorship = ["client-basic-authorship"]
use-client-block-builder = ["client-block-builder"]
use-client-chain-spec = ["client-chain-spec"]
use-client-chain-spec-derive = ["client-chain-spec-derive"]
use-client-cli = ["client-cli"]
use-client-consensus-aura = ["client-consensus-aura"]
use-client-consensus-babe = ["client-consensus-babe"]
use-client-consensus-pow = ["client-consensus-pow"]
use-client-consensus-slots = ["client-consensus-slots"]
use-client-consensus-uncles = ["client-consensus-uncles"]
use-client-db = ["client-db"]
use-client-executor = ["client-executor"]
use-client-executor-runtime-test = ["client-executor-runtime-test"]
use-client-finality-grandpa = ["client-finality-grandpa"]
use-client-tracing = ["client-tracing"]
use-client-keystore = ["client-keystore"]
use-client-network = ["client-network"]
use-client-offchain = ["client-offchain"]
use-client-peerset = ["client-peerset"]
use-client-rpc-servers = ["client-rpc-servers"]
use-client-rpc = ["client-rpc"]
use-client-rpc-api = ["client-rpc-api"]
use-client-service = ["client-service"]
use-client-service-test = ["client-service-test"]
use-client-state-db = ["client-state-db"]
use-client-telemetry = ["client-telemetry"]
use-client-transaction-pool = ["client-transaction-pool"]
use-client-transaction-pool-graph = ["client-transaction-pool-graph"]
use-client-utils-wasm-builder-runner = ["client-utils-wasm-builder-runner"]
use-client-grafana-data-source = ["client-grafana-data-source"]
use-client-grafana-data-source-test = ["client-grafana-data-source-test"]
use-frame-assets = ["frame-assets"]
use-frame-aura = ["frame-aura"]
use-frame-authority-discovery = ["frame-authority-discovery"]
use-frame-authorship = ["frame-authorship"]
use-frame-babe = ["frame-babe"]
use-frame-balances = ["frame-balances"]
use-frame-collective = ["frame-collective"]
use-frame-contracts = ["frame-contracts"]
use-frame-contracts-rpc = ["frame-contracts-rpc"]
use-frame-contracts-rpc-runtime-api = ["frame-contracts-rpc-runtime-api"]
use-frame-democracy = ["frame-democracy"]
use-frame-elections-phragmen = ["frame-elections-phragmen"]
use-frame-elections = ["frame-elections"]
use-frame-evm = ["frame-evm"]
use-frame-example = ["frame-example"]
use-frame-executive = ["frame-executive"]
use-frame-finality-tracker = ["frame-finality-tracker"]
use-frame-generic-asset = ["frame-generic-asset"]
use-frame-grandpa = ["frame-grandpa"]
use-frame-im-online = ["frame-im-online"]
use-frame-indices = ["frame-indices"]
use-frame-membership = ["frame-membership"]
use-frame-metadata = ["frame-metadata"]
use-frame-nicks = ["frame-nicks"]
use-frame-offences = ["frame-offences"]
use-frame-randomness-collective-flip = ["frame-randomness-collective-flip"]
use-frame-scored-pool = ["frame-scored-pool"]
use-frame-session = ["frame-session"]
use-frame-staking = ["frame-staking"]
use-frame-staking-reward-curve = ["frame-staking-reward-curve"]
use-frame-sudo = ["frame-sudo"]
use-frame-support = ["frame-support"]
use-frame-support-procedural = ["frame-support-procedural"]
use-frame-support-procedural-tools = ["frame-support-procedural-tools"]
use-frame-support-procedural-tools-derive = ["frame-support-procedural-tools-derive"]
use-frame-support-test = ["frame-support-test"]
use-frame-system = ["frame-system"]
use-frame-system-rpc-runtime-api = ["frame-system-rpc-runtime-api"]
use-frame-timestamp = ["frame-timestamp"]
use-frame-transaction-payment = ["frame-transaction-payment"]
use-frame-transaction-payment-rpc = ["frame-transaction-payment-rpc"]
use-frame-transaction-payment-rpc-runtime-api = ["frame-transaction-payment-rpc-runtime-api"]
use-frame-treasury = ["frame-treasury"]
use-frame-utility = ["frame-utility"]
use-primitives-application-crypto = ["primitives-application-crypto"]
use-primitives-authority-discovery = ["primitives-authority-discovery"]
use-primitives-authorship = ["primitives-authorship"]
use-primitives-block-builder-runtime-api = ["primitives-block-builder-runtime-api"]
use-primitives-blockchain = ["primitives-blockchain"]
use-primitives-consensus-aura = ["primitives-consensus-aura"]
use-primitives-consensus-babe = ["primitives-consensus-babe"]
use-primitives-consensus-common = ["primitives-consensus-common"]
use-primitives-consensus-pow = ["primitives-consensus-pow"]
use-primitives-core = ["primitives-core"]
use-primitives-core-debug-derive = ["primitives-core-debug-derive"]
use-primitives-core-storage = ["primitives-core-storage"]
use-primitives-externalities = ["primitives-externalities"]
use-primitives-finality-tracker = ["primitives-finality-tracker"]
use-primitives-finality-grandpa = ["primitives-finality-grandpa"]
use-primitives-inherents = ["primitives-inherents"]
use-primitives-keyring = ["primitives-keyring"]
use-primitives-offchain = ["primitives-offchain"]
use-primitives-panic-handler = ["primitives-panic-handler"]
use-primitives-phragmen = ["primitives-phragmen"]
use-primitives-rpc = ["primitives-rpc"]
use-primitives-runtime-interface = ["primitives-runtime-interface"]
use-primitives-runtime-interface-proc-macro = ["primitives-runtime-interface-proc-macro"]
use-primitives-runtime-interface-test-wasm = ["primitives-runtime-interface-test-wasm"]
use-primitives-serializer = ["primitives-serializer"]
use-primitives-session = ["primitives-session"]
use-primitives-sr-api = ["primitives-sr-api"]
use-primitives-sr-api-proc-macro = ["primitives-sr-api-proc-macro"]
use-primitives-sr-api-test = ["primitives-sr-api-test"]
use-primitives-sr-arithmetic = ["primitives-sr-arithmetic"]
use-primitives-sr-io = ["primitives-sr-io"]
use-primitives-sr-primitives = ["primitives-sr-primitives"]
use-primitives-sr-sandbox = ["primitives-sr-sandbox"]
use-primitives-sr-staking-primitives = ["primitives-sr-staking-primitives"]
use-primitives-sr-std = ["primitives-sr-std"]
use-primitives-sr-version = ["primitives-sr-version"]
use-primitives-state-machine = ["primitives-state-machine"]
use-primitives-timestamp = ["primitives-timestamp"]
use-primitives-transaction-pool = ["primitives-transaction-pool"]
use-primitives-transaction-pool-runtime-api = ["primitives-transaction-pool-runtime-api"]
use-primitives-trie = ["primitives-trie"]
use-primitives-wasm-interface = ["primitives-wasm-interface"]
use-test-utils-chain-spec-builder = ["test-utils-chain-spec-builder"]
use-test-utils-client = ["test-utils-client"]
use-test-utils-primitives = ["test-utils-primitives"]
use-test-utils-runtime = ["test-utils-runtime"]
use-test-utils-runtime-client = ["test-utils-runtime-client"]
use-test-utils-transaction-factory = ["test-utils-transaction-factory"]
use-utils-build-script-utils = ["utils-build-script-utils"]
use-utils-fork-tree = ["utils-fork-tree"]
use-utils-frame-rpc-support = ["utils-frame-rpc-support"]
use-utils-frame-rpc-system = ["utils-frame-rpc-system"]
use-utils-wasm-builder = ["utils-wasm-builder"]

[profile.release]
# Substrate runtime requires unwinding.
panic = "unwind"
